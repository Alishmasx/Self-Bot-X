#!/usr/bin/env bash
GRE='\033[92m' # Green Light
RD='\033[91m' # Red Light
YLW='\033[93m' # Yellow Light
NC='\033[0m' # White
PTH=/usr/share/lua/5.2/
trap "exit 1" TERM
export TOP_PID=$$
BotH='Self-Bot-X'
function Update_CH {
if ! { sudo apt update && sudo apt upgrade -y echo E: update failed; } | grep -q '^[WE]:'; then
echo success
else
echo failure
exit 1
fi
echo ""
}
function MOREPAK {
rslv
sudo apt install git redis-server lua5.2 liblua5.2-dev lua-lgi libnotify-dev unzip tmux -y 
sudo apt install libconfig++9v5 libstdc++6
sudo apt autoremove
sudo apt install gcc-4.9
sudo apt --yes install wget libconfig9 libjansson4 lua5.2 liblua5.2 make unzip g++ whois fortune fortunes
sudo apt install g++-4.7 -y c++-4.7 -y
sudo apt install libreadline-dev -y libconfig-dev -y libssl-dev -y lua5.2 -y liblua5.2-dev -y lua-socket -y lua-sec -y lua-expat -y libevent-dev -y make unzip git redis-server autoconf g++ -y libjansson-dev -y libpython-dev -y expat libexpat1-dev -y
sudo apt install screen -y
sudo apt install lua-redis
if [ "$?" != "0" ]; then
exit 1
fi
}

function loading {
spin[0]="-"
spin[1]="\\"
spin[2]="|"
spin[3]="/"
PID=$!
echo -n "${spin[0]}"
while [ -d /proc/$PID ]
do
for i in "${spin[@]}"
do
echo -ne "\b$i"
sleep 0.1
done
done
wait $PID
if [ $? -ne 0 ]; then
echo -e "\n${RD}Failed to install !"
kill -s TERM $TOP_PID
else
echo -e "\b${GRE}Done."
fi
}
function Configing() {
    echo -e "\e[1m\e[32m"
read -p "==> Do you want to install Packages??[y/n]"  -t 10 CerNerCompany
if [ "$CerNerCompany" = "Y" ];then
echo -e "\e[1m\e[97m==> Please choose the right one"
sleep 3
echo -e "\e[1m\e[32m"
read -p "==> Do you want to install Packages??[y/n] "  -t 10 CerNerCompany
fi
if [ "$CerNerCompany" = "y" ]
then
echo -ne "\e[1m\e[97mUpdating Packages...  "
Update_CH >> /dev/null 2>&1 & loading
sleep 2
echo -ne "\n\e[1m\e[97mInstalling  Packages...  "
MOREPAK >> /dev/null 2>&1 & loading
sleep 2
echo -ne "\n\e[1m\e[97mUpdating Packages...  "
Update_CH >> /dev/null 2>&1 & loading
fi
if [ -d "$HOME/$BotH" ];then
if [ ! -f "$HOME/$BotH/CRCO/tdlua.so.zip" ]; then
echo -e "\e[1m\e[97m==> Installing TDlua .."

cd $HOME/$BotH/CRCO ; unzip tdlua.so.zip >> /dev/null 2>&1 & loading
sudo mv tdlua.so $PTH >> /dev/null 2>&1 & loading
 
echo -e "\e[1m\e[97m==> TDLUA successfully installed "
else 
echo -e "\e[1m\e[32m==> \e[97m The file NotFound.. TDLUA\e[0m"

fi
if [ -f $PTH'tdlua.so' ];then
echo -e "\e[1m\e[32m==> \e[97m The file is correct.. TDLUA\e[0m"
else
echo -e "\e[1m\e[32m==> \e[97m The file NotFound.. TDLUA\e[0m"

fi
echo -e "\e[1m\e[32m==> \e[97m The file is correct.. $BotH\e[0m"
else
echo -e "\e[1m\e[97m==> Source not found!,"
fi

}

case $1 in
start)
echo -e "\e[1m\e[36m==> \e[31m ZPM running.. \e[0m"
lua L-C.lua START_BOT
exit;;
reset)
lua L-C.lua RESET_BOT
exit;;
login)
lua L-C.lua LOGIN_BOT
exit;;
config)
lua L-C.lua CONFIG_BOT
exit;;
install)
Configing
exit;;
esac
exit 0
